@model List<ECommerceProject.Models.Product>
@using System.Linq

<section class="py-5" style="min-height: 100vh;">
    @if (User.IsInRole("Admin") || User.IsInRole("Trader"))
    {
        <div class="mb-4">
            <a asp-action="ListOfProduct" asp-controller="Product" class="btn btn-primary">Edit Or Delete</a>
            <a asp-action="New" asp-controller="Product" class="btn btn-primary">Add New</a>
        </div>
    }

    <div class="container-fluid">
        <!-- Dropdown for category filter -->
        <div class="select-group text-center mb-4">
            <select class="btn btn-primary mt-2" id="categoryFilter">
                <option value="*">All</option>
                @foreach (var category in Enum.GetValues(typeof(ECommerceProject.Models.Department)))
                {
                    <option value=".@(category.ToString().ToLower())">@category</option>
                }
            </select>
        </div>

        <!-- Gallery Section -->
        <div class="gallery my-4 d-flex flex-wrap justify-content-center align-items-start">
            @if (Model != null && Model.Any())
            {
                foreach (var product in Model)
                {
                    decimal discountPercentage = 0.10M; // 10% discount
                    decimal discountedPrice = product.Price > 10 ? product.Price * (1 - discountPercentage) : product.Price;

                    <div class="product-item @(product.Category?.Name.ToLower() ?? "default-category")" style="margin: 10px;">
                        <div class="d-flex flex-column align-items-center">
                            @if (User.Identity.IsAuthenticated && !User.IsInRole("Admin"))
                            {
                                <a asp-action="Details" asp-controller="Product" asp-route-id="@product.Id" class="btn-wishlist">
                                    <svg width="24" height="24"><use xlink:href="#heart"></use></svg>
                                </a>
                            }
                            <div>
                                @if (!string.IsNullOrEmpty(product.ImageUrl))
                                {
                                    <img src="@product.ImageUrl" alt="Product Image" width="200" height="200" />
                                }
                                else
                                {
                                    <p>No image available</p>
                                }
                            </div>
                            <h3 class="product-title text-center">@product.Name</h3>
                            @if (User.Identity.IsAuthenticated && !User.IsInRole("Admin"))
                            {
                                <span class="qty">1 Unit</span>
                                <span class="rating">
                                    <svg width="24" height="24" class="text-primary"><use xlink:href="#star-solid"></use></svg> 4.5
                                </span>
                            }
                            <span class="price">
                                @if (!(User.IsInRole("Admin") || User.IsInRole("Trader")))
                                {
                                    @if (product.Price > 10)
                                    {
                                        <span class="text-danger text-decoration-line-through" style="font-size: 0.7em;">@product.Price.ToString("C")</span>
                                        <span class="text-success" style="font-size: 0.7em;">@discountedPrice.ToString("C")</span>
                                        <!-- Discount Badge -->
                                        <span class="badge bg-success position-absolute m-3" style="font-size: 0.4em;">-10%Off</span>
                                    }
                                    else
                                    {
                                        <span style="font-size: 0.8em;">@product.Price.ToString("C")</span>
                                    }
                                }
                            </span>

                            <div class="d-flex align-items-center justify-content-between">
                                @if (!(User.IsInRole("Admin") || User.IsInRole("Trader")))
                                {
                                    <div class="input-group product-qty">
                                        <span class="input-group-btn">
                                            <button type="button" class="quantity-left-minus btn btn-danger btn-number" data-type="minus">
                                                <svg width="16" height="16"><use xlink:href="#minus"></use></svg>
                                            </button>
                                        </span>
                                        <input type="text" name="quantity" class="form-control input-number" value="1" min="1" max="10">
                                        <span class="input-group-btn">
                                            <button type="button" class="quantity-right-plus btn btn-success btn-number" data-type="plus">
                                                <svg width="16" height="16"><use xlink:href="#plus"></use></svg>
                                            </button>
                                        </span>
                                    </div>
                                }

                                @if (!(User.IsInRole("Admin") || User.IsInRole("Trader")))
                                {
                                    <a href="#" class="btn btn-primary btn-add-to-cart" data-id="@product.Id" data-username="@User.Identity.Name" style="font-size: 0.8em; display: flex; align-items: center;" title="Add to Cart" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal">
                                        Add to Cart
                                        <iconify-icon icon="uil:shopping-cart" style="margin-left: 5px;"></iconify-icon>
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-center">No products available.</p>
            }
        </div>

    </div>
</section>

<!-- Alert Message Style for Cart Add -->
<div id="cartAlert" class="alert alert-success alert-dismissible fade show" role="alert" style="display: none; position: fixed; top: 20px; right: 20px; z-index: 1050;">
    Product added to cart successfully!
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>

<!-- Scripts for Isotope filtering, quantity handling, and Add to Cart -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.isotope/3.0.6/isotope.pkgd.min.js"></script>

 <script>
    // Initialize Isotope for filtering products
    var $galleryContainer = $('.gallery').isotope({
        itemSelector: '.product-item',
        layoutMode: 'fitRows'
    });

    // Dropdown filter change event
    $('#categoryFilter').on('change', function () {
        var value = $(this).val();
        $galleryContainer.isotope({
            filter: value
        });
    });

    // Function to add products to cart (AJAX request)
    function addToCart(productId, quantity) {
        $.ajax({
            url: '/Cart/AddToCart', // Update with your Cart Controller route
            type: 'POST',
            data: { productId: productId, quantity: quantity },
            success: function (response) {
                $('#cartAlert').fadeIn(); // Show alert on successful add to cart
                setTimeout(function () {
                    $('#cartAlert').fadeOut(); // Hide alert after 3 seconds
                }, 3000);
            },
            error: function (error) {
                alert('Error adding product to cart.');
            }
        });
    }

    // Handle quantity increment and decrement
    $(document).ready(function () {
        $('.btn-number').click(function (e) {
            e.preventDefault();
            var fieldName = $(this).attr('data-type');
            var quantityInput = $(this).closest('.product-qty').find('input[name="quantity"]');
            var currentVal = parseInt(quantityInput.val());

            if (!isNaN(currentVal)) {
                if (fieldName === 'minus' && currentVal > 1) {
                    quantityInput.val(currentVal - 1);
                } else if (fieldName === 'plus') {
                    quantityInput.val(currentVal + 1);
                }
            } else {
                quantityInput.val(1);
            }
        });

        // Add to cart button click event
        $('.btn-add-to-cart').click(function (e) {
            e.preventDefault();
            let productId = $(this).data('id');
            let quantity = parseInt($(this).closest('.product-item').find('input[name="quantity"]').val());
            addToCart(productId, quantity);
        });
    });
</script>
